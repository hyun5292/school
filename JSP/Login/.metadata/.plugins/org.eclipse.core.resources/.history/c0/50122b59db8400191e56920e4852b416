package Servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.security.Provider.Service;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import DaoDto.AccountDAO;
import DaoDto.AccountDTO;
import Service.AccountAllService;
import Service.MemberService;

/**
 * Servlet implementation class FrontCon
 */
@WebServlet("*.do")
public class FrontCon extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private MemberService service;
	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public FrontCon() {
		super();
		service = new MemberService();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		actionDo(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		actionDo(request, response);
	}

	private void actionDo(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("actionDo()");

		String uri = request.getRequestURI();
		String conpath = request.getContextPath();
		String command = uri.substring(conpath.length());

		if (command.equals("/accountAll.do")) {
			response.setContentType("text/html; charset=EUC-kr");
			PrintWriter writer = response.getWriter();
			writer.println("<html><head></head><body>");

			AccountAllService service = new AccountAllService();
			ArrayList<AccountDTO> dtos = service.execute(request, response);

			for (int i = 0; i < dtos.size(); i++) {
				AccountDTO dto = dtos.get(i);

				String id = dto.getId();
				String name = dto.getName();

				writer.println("<h1>" + (i + 1) + "번 <br/><h1>");
				writer.println("아이디 : " + id + " 이름 : " + name);
				writer.println("<br/>");
			}

			writer.println("</body></html>");
		} else if (command.equals("/Login.do")) {
			String id = request.getParameter("id");
			String pw = request.getParameter("pw");

			if (service.login(id, pw)) {
				request.setAttribute("msg", "환영합니다");
				request.setAttribute("id", id);
			} else {
				request.setAttribute("msg", "로그인 실패");
			}
			request.getRequestDispatcher("LoginResult.jsp").forward(request, response);

		}
		else if (uri.equals("/ModifyForm.do")) {
			String id = request.getParameter("id");
			AccountDTO dto = service.getMember(id);
			request.setAttribute("dto", dto);
			request.getRequestDispatcher("Modify.jsp").forward(request, response);
		}
		else if (uri.equals("/Modify.do")) {
			String id = request.getParameter("id");
			String pw = request.getParameter("pw");
			String name = request.getParameter("name");
			String email = request.getParameter("email");
			// service.update(id, pw, name, email);
			response.sendRedirect("main.do");
			return;
		}
		else if (uri.equals("/memberList.do")) {
			request.setAttribute("memberList", service.getMemberList());
			request.getRequestDispatcher("memberList.jsp").forward(request, response);
		}
		else if (uri.equals("/join.do")) {
			String id = request.getParameter("id");
			
			AccountDAO dao = AccountDAO.getInstance();
			if(dao.confirmId(id) == AccountDAO.ACCOUNT_EXISTENT) {
				request.getRequestDispatcher("JoinResult.html").forward(request, response);
			} else{
				int ri = dao.insertMember(dto);
				if(ri == AccountDAO.ACCOUNT_JOIN_SUCCESS) {
					
				}
			}
		}
	}

}
