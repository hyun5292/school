/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-06-17 05:09:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Dto.MovieDTO;
import java.util.ArrayList;

public final class MovieInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Dto.MovieDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>영화정보</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"Movie.js\"></script>\r\n");

	String id = (String) request.getAttribute("id");
	String pw = (String) request.getAttribute("pw");
	MovieDTO dto = (MovieDTO) request.getAttribute("dto");

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("font {\r\n");
      out.write("\tcolor: #353F48;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table border=1 align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td rowspan=4><a href=\"Main.jsp\"><img src=\"Image\\Logo.png\"\r\n");
      out.write("\t\t\t\t\twidth=\"150px\" height=\"150px\" align=\"center\"></a></img></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t<td colspan=\"2\" height=\"50px\" width = \"600px\"><font size=\"150\"\r\n");
      out.write("\t\t\t\tface=\"Arial Black\">MOVIE</font></td>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t");

				if (id == null && pw == null) {
			
      out.write("\r\n");
      out.write("\t\t\t<td height=\"80px\"  width = \"600px\" colspan=2><b> <a href=\"Login.html\">로그인\r\n");
      out.write("\t\t\t\t</a> | <a href=\"Join.html\">회원가입</a></b></td>\r\n");
      out.write("\t\t\t");

				} else {
			
      out.write("\r\n");
      out.write("\t\t\t<td height=\"80px\"  width = \"600px\" colspan=2><b> <a href=\"Logout.jsp\">로그아웃\r\n");
      out.write("\t\t\t\t</a> | <a href=\"ModifyForm.do?id=");
      out.print(id);
      out.write("\">회원정보 수정</a></b></td>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t<td bgcolor=\"#FFD966\" width=\"100px\"><a href=\"Movies.do\">영화</a></td>\r\n");
      out.write("\t\t\t<td bgcolor=\"#FFD966\" width=\"100px\"><a href=\"moviechoice.jsp\">예매</a></td>\r\n");
      out.write("\t\t\t<td bgcolor=\"#FFD966\" width=\"100px\"><a href=\"MyPageView.do\">마이페이지</td>\r\n");
      out.write("\t\t\t<td bgcolor=\"#FFD966\" width=\"100px\"><a href=\"list.do?pgNum=1\">자유게시판</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</br>\r\n");
      out.write("\t</br>\r\n");
      out.write("\t<!--영화 테이블-->\r\n");
      out.write("\t<table border=1 align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><img src=");
      out.print(dto.getM_img());
      out.write(" width=\"378px\" height=\"540px\">\r\n");
      out.write("\t\t\t</image></td>\r\n");
      out.write("\t\t\t<td bgcolor=\"#FFD966\" width=\"378px\" height=\"150px\"><font\r\n");
      out.write("\t\t\t\tsize=\"5\" face=\"Arial\"> <b>제목 : ");
      out.print(dto.getTitle());
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t<br> 감독 : ");
      out.print(dto.getDir());
      out.write("<br> <br> 출연 : ");
      out.print(dto.getActor());
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t<br> 장르 : ");
      out.print(dto.getGenre());
      out.write("<br> <br> 개봉일 : ");
      out.print(dto.getOpendate());
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t<br> 상영시간 : ");
      out.print(dto.getPlaytime());
      out.write("<br> <br> 등급 : ");
      out.print(dto.getAge());
      out.write("<br>\r\n");
      out.write("\t\t\t\t\t\t<br> 줄거리 : ");
      out.print(dto.getOutline());
      out.write("\r\n");
      out.write("\t\t\t\t</b></font></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</br>\r\n");
      out.write("\t</br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
