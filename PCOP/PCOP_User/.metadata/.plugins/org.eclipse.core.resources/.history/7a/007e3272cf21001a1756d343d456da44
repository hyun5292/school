package user;

import java.awt.BorderLayout;
import java.awt.Color;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;

import pcop.dao.FoodOrderDAO;
import pcop.dao.Food_Stock_DAO;
import pcop.dto.FoodOrderDTO;
import pcop.dto.Food_Stock_DTO;

import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Vector;

public class FoodOrder extends JFrame {
	private Font font_L = new Font("맑은 고딕", Font.BOLD, 25);
	private Font font_M = new Font("맑은 고딕", Font.BOLD, 20);
	private Font font_S = new Font("맑은 고딕", Font.BOLD, 18);
	private JPanel panel = new JPanel();

	private JTextArea Area, area_Want;
	private JTabbedPane tab_Food;
	private JTextField text_Food, text_Way, text_Want;
	private JButton btn_Search, btn_Order, btn_Plus, btn_Minus;
	private JLabel label;
	private JTable tbl_Food, tbl_Pay;
	private Vector<String> col = new Vector<String>(); // 테이블 컬럼
	private Vector row; // 테이블 내용
	private DefaultTableModel model;
	private JScrollPane scroll;
	private JComboBox com_Way;
	private String[] FoodKind = null;

	private ImageIcon FoodOrder = new ImageIcon("image/noselected/FOrder.png");
	private ImageIcon FoodOrder_s = new ImageIcon("image/selected/FOrder_s.png");
	private ImageIcon ReadingGlass = new ImageIcon("image/noselected/ReadingGlass.png");
	private ImageIcon ReadingGlass_s = new ImageIcon("image/selected/ReadingGlass_s.png");
	private ImageIcon Mark = new ImageIcon("image/PCOP.png");
	private ImageIcon Category = new ImageIcon("image/MenuCategory.png");
	private ImageIcon Plus = new ImageIcon("image/Plus.png");
	private ImageIcon Minus = new ImageIcon("image/Minus.png");

	int x = (int) Toolkit.getDefaultToolkit().getScreenSize().getWidth();
	int y = (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight();

	/** dao,dto 가져오기 **/
	FoodOrderDAO dao = new FoodOrderDAO();
	FoodOrderDTO dto = new FoodOrderDTO();
	Food_Stock_DAO fsDao = new Food_Stock_DAO();

	public FoodOrder(String m_id) { // 생성자야 실행하면 여기서 초기설정 해줘
		setTitle("먹거리 주문"); // 타이틀바 텍스트 설정
		setBounds(x / 2 - 600, y / 2 - 350, 1200, 700); // 앞에 두 개는 프레임 시작 위치, 뒤에 두 개는 프레임 사이즈!

		/** 나중에 지워랑! **/
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // 이거 해놓고 x누르면 아예 프로그램이 종료 돼

		panel = new JPanel(); // 위에서 선언한 객체 초기화
		panel.setBorder(new EmptyBorder(5, 5, 5, 5)); // 상하좌우 살짝씩 여유 주는거야
		panel.setLayout(new BorderLayout(0, 0)); // 멀라 Layout 설정해준대
		setContentPane(panel); // panel_MID을 지금까지 설정해준걸로 세팅해
		setIconImage(Mark.getImage()); // 좌측 상단이랑 작업 표시줄 아이콘 설정
		setResizable(false);
		panel.setBackground(new java.awt.Color(50, 50, 52)); // 뒤에 배경 블랙

		panel.setLayout(null); // 판을 다시 짠다

		/** JLabel - 상품주문목록 **/
		label = new JLabel(Category);
		label.setBounds(5, 5, 180, 50);

		add(label);

		/** TextField - 회원 ID 검색하는 **/
		text_Food = new JTextField(20); // 텍스트필드 재정의
		text_Food.setBounds(730, 5, 400, 50); // 위치랑 사이즈
		text_Food.setFont(font_M); // 글씨체

		panel.add(text_Food); // 판넬에 textfield 추가

		/** Button - 회원 검색 버튼 **/
		btn_Search = new JButton(ReadingGlass);
		btn_Search.setSelectedIcon(ReadingGlass_s);
		btn_Search.setRolloverIcon(ReadingGlass_s);
		btn_Search.setBorderPainted(false);
		btn_Search.setFocusPainted(false);
		btn_Search.setContentAreaFilled(false);
		btn_Search.setBounds(1135, 8, 45, 45);

		panel.add(btn_Search);

		FoodKind = fsDao.GetFoodKind();
		MakeBtn[] mb = new MakeBtn[FoodKind.length];
		/** 탭 추가 **/
		tab_Food = new JTabbedPane(JTabbedPane.LEFT); // 탭을 상단에 추가해줘
		tab_Food.setFont(new Font("맑은 고딕", Font.BOLD, 50)); // 탭 폰트 설정해줘
		for (int i = 0; i < FoodKind.length; i++) {
			// tab_Food.addTab(FoodKind[i], mb[i] = new MakeBtn(FoodKind[i]));
			tab_Food.addTab(FoodKind[i], mb[i] = new MakeBtn(FoodKind[i]));
		}

		tab_Food.setBackground(new java.awt.Color(50, 50, 52)); // 탭 위에 색깔 검정이야
		tab_Food.setForeground(Color.WHITE); // 탭 위에 글씨 하얀색이야
		//tab_Food.setBounds(5, 60, 1173, 400);
		tab_Food.setBorder(new LineBorder(Color.GRAY, 5));
		tab_Food.addChangeListener(new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				// mb[tab_Food.getSelectedIndex()].removeAll();
			}
		});

		/** 스크롤 설정 **/
		scroll = new JScrollPane(tab_Food);
		scroll.setViewportView(tab_Food);
		scroll.setBounds(5, 60, 1173, 400);

		add(scroll); // 스크롤 추가

		/** JLabel - 상품주문목록 **/
		label = new JLabel("상품주문목록");
		label.setFont(font_S);
		label.setBounds(10, 467, 250, 25);
		label.setForeground(Color.BLACK);

		add(label);

		/** Table - 회원 정보 띄워주는 **/
		tbl_Food = new JTable(); // 테이블 재설정
		scroll = new JScrollPane(); // 스크롤 재설정

		/** Table 컬럼 **/
		col.addElement("상품명");
		col.addElement("판매금액");
		col.addElement("수량");
		col.addElement("최종금액");
		//col.addElement("처리결과");

		/** 테이블에 들어갈 행들 불러오는 메서드 **/
		row = dao.getOrderedList();

		model = new DefaultTableModel(row, col) {
			// 셀 수정 못하게 하는 부분
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};
		tbl_Food = new JTable(model);
		tbl_Food.setRowHeight(50);
		tbl_Food.setFont(font_S); // 글씨체
		tbl_Food.setBackground(new java.awt.Color(227, 225, 230));

		panel.add(tbl_Food);

		/** 스크롤 설정 **/
		scroll = new JScrollPane(tbl_Food);
		scroll.setViewportView(tbl_Food);
		scroll.setBounds(10, 495, 700, 155);

		add(scroll); // 스크롤 추가

		/** JLabel - 상품결제선택 **/
		label = new JLabel("상품결제선택");
		label.setFont(font_S);
		label.setBounds(722, 467, 250, 25);
		label.setForeground(Color.BLACK);

		add(label);

		/** Button - Plus **/
		btn_Plus = new JButton(Plus);
		btn_Plus.setSelectedIcon(Plus);
		btn_Plus.setRolloverIcon(Plus);
		btn_Plus.setBorderPainted(false);
		btn_Plus.setFocusPainted(false);
		btn_Plus.setContentAreaFilled(false);
		btn_Plus.setBounds(635, 455, 50, 50);
		btn_Plus.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				// 클릭된 셀의 수량을 +1씩 올림
				int count = 0; // 수량
				int rowClick = tbl_Food.getSelectedRow();

				count = Integer.parseInt(tbl_Food.getValueAt(rowClick, 2).toString()) + 1; // 클릭된 셀
				tbl_Food.setValueAt(count, rowClick, 2);
				
				//수량에 따른 가격을 수정
				int price = 0;
				price = Integer.parseInt(tbl_Food.getValueAt(rowClick, 2).toString()) * Integer.parseInt(tbl_Food.getValueAt(rowClick, 1).toString());
				tbl_Food.setValueAt(price, rowClick, 3);
			};
		});

		add(btn_Plus);

		/** Button - Minus **/
		btn_Minus = new JButton(Minus);
		btn_Minus.setSelectedIcon(Minus);
		btn_Minus.setRolloverIcon(Minus);
		btn_Minus.setBorderPainted(false);
		btn_Minus.setFocusPainted(false);
		btn_Minus.setContentAreaFilled(false);
		btn_Minus.setBounds(670, 455, 50, 50);
		btn_Minus.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				// 클릭된 셀의 수량을 -1씩 올림
				int count = 0; // 수량
				int rowClick = tbl_Food.getSelectedRow(); // 클릭된 셀

				count = Integer.parseInt(tbl_Food.getValueAt(rowClick, 2).toString()) - 1;
				tbl_Food.setValueAt(count, rowClick, 2);
				
				//수량에 따른 가격을 수정
				int price = 0;
				price = Integer.parseInt(tbl_Food.getValueAt(rowClick, 2).toString()) * Integer.parseInt(tbl_Food.getValueAt(rowClick, 1).toString());
				tbl_Food.setValueAt(price, rowClick, 3);

				// 수량이 0이되면 리스트에서 삭제
				if (count == 0) {
					model.removeRow(tbl_Food.getSelectedRow());
				}
			}
		});

		add(btn_Minus);

		/** TextField - 선택된결제방식 **/
		text_Way = new JTextField("결제방식을 선택하세요"); // 텍스트필드 재정의
		text_Way.setBounds(720, 495, 255, 40); // 위치랑 사이즈
		text_Way.setEditable(false); // 수정 막음
		text_Way.setFont(font_M); // 글씨체

		panel.add(text_Way); // 판넬에 textfield 추가

		/** ComboBox - 결제방식 선택 **/
		com_Way = new JComboBox<String>(); // 콤보박스 초기화인데 String 형식이야
		com_Way.createToolTip();
		com_Way.setFont(font_M); // 폰트
		com_Way.setBounds(720, 540, 255, 40); // 위치랑 사이즈

		com_Way.addItem("현금");
		com_Way.addItem("카드결제");
		com_Way.setSelectedIndex(-1);
		com_Way.addItemListener(new ItemListener() { // 콤보박스 선택 시
			@Override
			public void itemStateChanged(ItemEvent e) {
				Object a = e.getItem();
				text_Way.setText(e.getItem().toString());
			}
		});

		add(com_Way); // panel_MID에 com_Division 추가

		/** TextArea - 주문시 요청사항 띄워주는 **/
		area_Want = new JTextArea("요청사항 입력");
		area_Want.setFont(font_S);
		// area_Want.setBounds(720, 585, 255, 63); => 지정하면 스크롤이 안먹힘
		area_Want.setLineWrap(true); // 자동 줄바꿈

		add(area_Want);

		/** 스크롤 설정 **/
		scroll = new JScrollPane(area_Want);
		scroll.setBounds(720, 585, 255, 63);
		scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

		add(scroll); // 스크롤 추가

		/** Button - 상품주문 **/
		btn_Order = new JButton(FoodOrder);
		btn_Order.setSelectedIcon(FoodOrder_s);
		btn_Order.setRolloverIcon(FoodOrder_s);
		btn_Order.setBorderPainted(false);
		btn_Order.setFocusPainted(false);
		btn_Order.setContentAreaFilled(false);
		btn_Order.setBounds(1200 - 215, 460, 200, 200);
		btn_Order.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				int rowClick = tbl_Food.getSelectedRow(); // 클릭된 셀

				dto.setM_ID(m_id);
				dto.setFO_PRODUCT((String) tbl_Food.getValueAt(rowClick, 0)); // 상품명
				dto.setFO_PRICE((int) tbl_Food.getValueAt(rowClick, 1)); // 상품가격
				dto.setFO_COUNT((int) tbl_Food.getValueAt(rowClick, 2)); // 수량
				dto.setFO_RESULT((String) tbl_Food.getValueAt(rowClick, 4)); // 처리결과
				dto.setFO_WAY(text_Way.getText()); // 결제방법
				dto.setFO_MEMO(area_Want.getText()); // 요청사항

				/** db에 값 insert 하기 **/
				// dao.OrderInsert(ArrayList dto);
			}
		});

		add(btn_Order);

		/** TextArea - 선택 정보 **/
		Area = new JTextArea();
		Area.setForeground(Color.WHITE);
		Area.setFont(font_M);
		Area.setBounds(5, 465, 980, 190);
		Area.disable();
		Area.setBackground(Color.GRAY);

		add(Area);
	}

	class MakeBtn extends JPanel {
		private JPanel panel = new JPanel();
		private String[] FoodsKind = null;
		private String[] images = null;
		private JButton[] btnImg = null;
		int height = 160;
		int[] x = { 190, 450, 710 };
		int y = 75;

		public MakeBtn(String str) {
			FoodsKind = fsDao.GetFoodsKind(str);
			images = fsDao.FoodImage(str);
			btnImg = new JButton[images.length];

			try {
				for (int i = 0; i < FoodsKind.length; i++) {
					File f = new File(images[i]);
					BufferedImage img_before = ImageIO.read(f);
					ImageIcon img_before_icon = new ImageIcon(img_before);
					Image img_before_i = img_before_icon.getImage();
					Image img_before_ch = img_before_i.getScaledInstance(300, 180, Image.SCALE_SMOOTH);
					ImageIcon img = new ImageIcon(img_before_ch);

					String sKind = FoodsKind[i];
					btnImg[i] = new JButton(img);
					btnImg[i].setBorder(new LineBorder(Color.GRAY, 5));
					btnImg[i].addActionListener(new ActionListener() {
						@Override
						public void actionPerformed(ActionEvent e) {
							Food_Stock_DTO fsDto = fsDao.GetFoodInfo(sKind);
							Object [] row = new Object[]{ fsDto.getFS_PRODUCT(), fsDto.getFS_PRICE(), 1, Integer.parseInt(fsDto.getFS_PRICE()) };
							model.addRow(row);
						}
					});
					add(btnImg[i]);

					label = new JLabel(FoodsKind[i]);
					label.setFont(font_S);
					if (i % 3 == 0) {
						y += height;
					}
					label.setForeground(Color.WHITE);
					label.setBorder(new LineBorder(Color.GRAY, 5));

					add(label);
				}
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}
}
