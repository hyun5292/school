package user;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import pcop.dao.MemberUpdateDAO;
import pcop.dto.MemberUpdateDTO;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.swing.SwingConstants;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;

public class AccessScreen extends JFrame {
	private Font font_L = new Font("맑은 고딕", Font.BOLD, 25);
	private Font font_M = new Font("맑은 고딕", Font.BOLD, 20);
	private Font font_S = new Font("맑은 고딕", Font.BOLD, 18);
	private ImageIcon Mark = new ImageIcon("image/PCOP.png");
	private ImageIcon Over = new ImageIcon("image/noselected/Over.png");
	private ImageIcon Over_s = new ImageIcon("image/selected/Over_s.png");
	private ImageIcon Food = new ImageIcon("image/noselected/Food.png");
	private ImageIcon Food_s = new ImageIcon("image/selected/Food_s.png");
	private ImageIcon MInfoReset = new ImageIcon("image/noselected/MInfoReset.png");
	private ImageIcon MInfoReset_s = new ImageIcon("image/selected/MInfoReset_s.png");

	private JPanel MainFrame; // Panel 등록해서 객체로 쓰고
	private JButton btn_Exit, btn_Food, btn_Info;
	private JLabel lbl_No, lbl_ID, lbl_UseMoney, lbl_UseTime, lbl_StartTime, lbl_LeftTime;
	private JTextArea textArea;
	public boolean state = false;

	private Calendar start, use, remain;
	private SimpleDateFormat sdf;

	int x = (int) Toolkit.getDefaultToolkit().getScreenSize().getWidth();
	int y = (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight();

	/** dao,dto 가져오기 **/
	MemberUpdateDAO dao = new MemberUpdateDAO();
	static MemberUpdateDTO dto = new MemberUpdateDTO();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) { // Main 함수고
		EventQueue.invokeLater(new Runnable() { // 이건 뭘까
			public void run() { // 실행 메서드
				try { // 이거 실행해서
					AccessScreen parent = new AccessScreen("Choi");
					Login l = new Login(parent);
					l.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public AccessScreen(String mID) throws InterruptedException {
		dto.setM_ID(mID);
		setFont(new Font("맑은 고딕", Font.BOLD, 10)); // 글씨체
		setTitle("환영합니다"); // 타이틀바 글씨 설정
		// setUndecorated(true); //이거를 해주면 위에 _ㅁx 이게 없어져
		setBounds(x - 490, 5, 490, 250); // 앞에 두 개는 프레임 시작 위치, 뒤에 두 개는 프레임 사이즈!
		MainFrame = new JPanel(); // 위에서 선언한 객체 초기화
		MainFrame.setBorder(new EmptyBorder(5, 5, 5, 5)); // 상하좌우 살짝씩 여유 주는거야
		MainFrame.setLayout(new BorderLayout(0, 0));
		setResizable(false);
		setContentPane(MainFrame); // MainFrame을 지금까지 설정해준걸로 세팅해
		getContentPane().setBackground(new java.awt.Color(50, 50, 52)); // 탭 뒤에 배경이 짙은 회색이야
		setIconImage(Mark.getImage()); // 좌측 상단이랑 작업 표시줄 아이콘 설정

		setLayout(null);

		/** dao에서 데이터 호출 **/
		dto.setS_NUM(dao.SeatSelect(dto.getM_ID()));

		/** Label - 좌석번호 **/
		lbl_No = new JLabel("NO." + dto.getS_NUM());
		lbl_No.setFont(font_L);
		lbl_No.setBounds(5, 5, 300, 25);
		lbl_No.setForeground(new java.awt.Color(255, 166, 0));

		add(lbl_No);

		/** JLabel - ID **/
		lbl_ID = new JLabel(dto.getM_ID()); // db를 가져와 텍스트박스에 뿌려줌
		lbl_ID.setFont(font_M);
		lbl_ID.setBounds(20, 5, 285, 25);
		lbl_ID.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_ID.setForeground(new java.awt.Color(255, 166, 0));

		add(lbl_ID);

		/** dao에서 데이터 호출 **/
		dto.setUSED_MONEY(dao.AccessSelect(dto.getM_ID()));

		/** 숫자에 콤마 표시 **/
		String Money = dto.getUSED_MONEY(); // db에 저장된 값을 Money에 저장
		int useMoney = 0;

		DecimalFormat df = new DecimalFormat("###,###");
		useMoney = Integer.parseInt(Money); // String -> int로 형변환

		/** JLabel - 사용요금 **/
		lbl_UseMoney = new JLabel("사용요금: " + df.format(useMoney) + "\\");
		lbl_UseMoney.setFont(font_M);
		lbl_UseMoney.setBounds(15, 55, 250, 25);
		lbl_UseMoney.setForeground(Color.WHITE);

		add(lbl_UseMoney);

		/** 현재시간 부분 **/
		start = Calendar.getInstance();
		sdf = new SimpleDateFormat("hh:mm:ss");

		/** JLabel - 시작시간 **/
		lbl_StartTime = new JLabel("시작시간: " + sdf.format(start.getTime()));
		lbl_StartTime.setFont(font_M);
		lbl_StartTime.setBounds(15, 90, 250, 25);
		lbl_StartTime.setForeground(Color.WHITE);

		add(lbl_StartTime);

		/** 사용중인 시간 계산 **/
		use = Calendar.getInstance();

		/** JLabel - 사용시간 **/
		lbl_UseTime = new JLabel("사용시간: ");
		lbl_UseTime.setFont(font_M);
		lbl_UseTime.setBounds(15, 125, 250, 25);
		lbl_UseTime.setForeground(Color.WHITE);

		add(lbl_UseTime);

		/** JLabel - 남은시간 **/
		lbl_LeftTime = new JLabel("남은시간: ");
		lbl_LeftTime.setFont(font_M);
		lbl_LeftTime.setBounds(15, 160, 250, 25);
		lbl_LeftTime.setForeground(new java.awt.Color(255, 166, 0));

		add(lbl_LeftTime);

		/** TextArea - 회원정보 뒤 테두리 **/
		textArea = new JTextArea();
		textArea.setBounds(5, 35, 300, 170);
		textArea.setFont(font_L);
		textArea.setEditable(false);
		textArea.setBackground(new java.awt.Color(50, 50, 52));
		textArea.setBorder(new LineBorder(new java.awt.Color(255, 166, 0), 3));

		add(textArea);

		/** Button - 사용종료 **/
		btn_Exit = new JButton(Over);
		btn_Exit.setSelectedIcon(Over_s);
		btn_Exit.setRolloverIcon(Over_s);
		btn_Exit.setBorderPainted(false);
		btn_Exit.setFocusPainted(false);
		btn_Exit.setContentAreaFilled(false);
		btn_Exit.setBounds(310, 5, 170, 65);
		btn_Exit.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				Login l = new Login();
				l.setVisible(true);
			}
		});

		add(btn_Exit);

		/** Button - 먹거리 주문 **/
		btn_Food = new JButton(Food);
		btn_Food.setSelectedIcon(Food_s);
		btn_Food.setRolloverIcon(Food_s);
		btn_Food.setBorderPainted(false);
		btn_Food.setFocusPainted(false);
		btn_Food.setContentAreaFilled(false);
		btn_Food.setBounds(310, 73, 170, 65);
		btn_Food.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				FoodOrder fo = new FoodOrder(dto.getM_ID());
				fo.setVisible(true);
			}
		});

		add(btn_Food);

		/** Button - 회원정보수정 **/
		btn_Info = new JButton(MInfoReset);
		btn_Info.setSelectedIcon(MInfoReset_s);
		btn_Info.setRolloverIcon(MInfoReset_s);
		btn_Info.setBorderPainted(false);
		btn_Info.setFocusPainted(false);
		btn_Info.setContentAreaFilled(false);
		btn_Info.setBounds(310, 142, 170, 65);
		btn_Info.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				MemberUpdate mu = new MemberUpdate();
				mu.setVisible(true);
			}
		});

		add(btn_Info);

	}

	public void RunLoop() {
		// 시간 동작 부분
		while (true) {
			try {
				Thread.sleep(1000);
				System.out.println("왜");

				/** 사용시간 **/
				lbl_UseTime.setText("사용시간: " + useTime(use.getTime()));
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	/** 사용시간 계산하는 메소드 **/
	private String useTime(Date udate) {
		start = Calendar.getInstance(); // 시간차 계산(현재 시간 객체 가져옴)

		long intervalMilli = (start.getTimeInMillis() - udate.getTime()) / 1000; // 시간차 계산
		long minute = 60; // 초값을 분으로 계산하는 값
		long hour = minute * 60; // 초값을 시간으로 계산하는 값

		int useHour = (int) (intervalMilli / hour);
		int useMinute = (int) ((intervalMilli % hour) / minute);
		int useSecond = (int) ((intervalMilli % hour) % minute);

		// 출력형태
		String tmp = (useHour < 10) ? "0" + useHour : useHour + "";
		tmp += ":";
		tmp += (useMinute < 10) ? "0" + useMinute : useMinute + "";
		tmp += ":";
		tmp += (useSecond < 10) ? "0" + useSecond : useSecond + "";
		return tmp;
	}

}
